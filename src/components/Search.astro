---
import { getCollection } from 'astro:content';

const posts = await getCollection('garden');
const searchData = posts.map(post => ({
  title: post.data.title,
  description: post.data.description,
  tags: post.data.tags,
  url: `/garden/${post.slug}`
}));
---

<div class="relative">
  <div class="relative">
    <input 
      type="search"
      id="search"
      placeholder="Search your garden..."
      class="w-full px-4 py-2 text-garden-primary dark:text-garden-dark-primary bg-white dark:bg-garden-dark-surface border border-gray-200 dark:border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-garden-accent dark:focus:ring-garden-dark-accent focus:border-transparent placeholder-garden-secondary dark:placeholder-garden-dark-secondary"
    />
    <div class="absolute right-3 top-1/2 -translate-y-1/2 text-garden-secondary dark:text-garden-dark-secondary">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
      </svg>
    </div>
  </div>
  <div id="search-results" class="absolute w-full mt-2 bg-white dark:bg-garden-dark-surface border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg hidden max-h-96 overflow-y-auto z-50">
  </div>
</div>

<script is:inline type="module" define:vars={{ searchData }}>
  import Fuse from '/node_modules/fuse.js/dist/fuse.esm.js';
  
  const fuse = new Fuse(searchData, {
    keys: ['title', 'description', 'tags'],
    threshold: 0.3,
  });

  const searchInput = document.getElementById('search');
  const searchResults = document.getElementById('search-results');

  if (searchInput && searchResults) {
    searchInput.addEventListener('input', (e) => {
      const target = e.currentTarget;
      if (!(target instanceof HTMLInputElement)) return;
      
      const results = fuse.search(target.value);
      
      if (target.value.length === 0) {
        searchResults.classList.add('hidden');
        return;
      }

      searchResults.classList.remove('hidden');
      searchResults.innerHTML = results
        .slice(0, 5)
        .map(result => `
          <a href="${result.item.url}" class="block p-3 hover:bg-garden-background dark:hover:bg-garden-dark-background">
            <div class="font-semibold text-garden-primary dark:text-garden-dark-primary">${result.item.title}</div>
            <div class="text-sm text-garden-secondary dark:text-garden-dark-secondary">${result.item.description}</div>
          </a>
        `)
        .join('');
    });

    // Close search results when clicking outside
    document.addEventListener('click', (e) => {
      if (!searchInput.contains(e.target) && !searchResults.contains(e.target)) {
        searchResults.classList.add('hidden');
      }
    });
  }
</script>