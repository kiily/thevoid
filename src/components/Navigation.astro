---
import { DataService } from '../lib/data-service';
import Search from './Search.astro';

const categories = await DataService.getCategories();
const tags = await DataService.getTags();
---

<button
	id="nav-toggle"
	class="fixed top-20 left-6 z-50 p-2 bg-white dark:bg-garden-dark-surface rounded-lg shadow-md text-garden-secondary dark:text-garden-dark-secondary hover:text-garden-accent dark:hover:text-garden-dark-accent transition-all duration-300"
	aria-label="Toggle Navigation"
>
	<svg
		xmlns="http://www.w3.org/2000/svg"
		class="h-6 w-6"
		fill="none"
		viewBox="0 0 24 24"
		stroke="currentColor"
	>
		<path
			stroke-linecap="round"
			stroke-linejoin="round"
			stroke-width="2"
			d="M4 6h16M4 12h16M4 18h16"></path>
	</svg>
</button>

<nav
	id="nav-menu"
	class="fixed top-0 left-0 w-64 h-screen -translate-x-full transition-transform duration-300 ease-in-out z-40 bg-garden-surface dark:bg-garden-dark-surface border-r border-gray-200 dark:border-gray-700"
>
	<div class="p-6">
		<div class="mb-8 mt-16">
			<a
				href="/"
				class="text-2xl font-bold text-garden-primary dark:text-garden-dark-primary hover:text-garden-accent dark:hover:text-garden-dark-accent transition-colors font-ui"
			>
				Digital Garden
			</a>
		</div>

		<Search
			id="nav-search"
			placeholder="Search garden..."
			className="mb-6"
			showTypes={false}
		/>

		<div class="space-y-6">
			<div>
				<h3
					class="text-sm font-semibold text-garden-secondary dark:text-garden-dark-secondary uppercase tracking-wider mb-3 font-ui"
				>
					Categories
				</h3>
				<ul class="space-y-2">
					{
						categories.map((category) => (
							<li>
								<a
									href={`/category/${category}`}
									class="nav-link text-garden-primary dark:text-garden-dark-primary hover:text-garden-accent dark:hover:text-garden-dark-accent transition-colors"
								>
									{category}
								</a>
							</li>
						))
					}
				</ul>
			</div>

			<div>
				<h3
					class="text-sm font-semibold text-garden-secondary dark:text-garden-dark-secondary uppercase tracking-wider mb-3 font-ui"
				>
					Tags
				</h3>
				<div class="flex flex-wrap gap-2">
					{
						tags.map((tag) => (
							<a
								href={`/tag/${tag}`}
								class="nav-link px-2 py-1 text-sm bg-garden-background dark:bg-garden-dark-background text-garden-secondary dark:text-garden-dark-secondary rounded-md hover:bg-garden-accent hover:text-white dark:hover:bg-garden-dark-accent transition-colors"
							>
								{tag}
							</a>
						))
					}
				</div>
			</div>
		</div>
	</div>
</nav>

<div
	id="nav-overlay"
	class="fixed inset-0 bg-black/20 dark:bg-black/40 z-30 transition-opacity duration-300 ease-in-out opacity-0 pointer-events-none"
>
</div>

<script is:inline>
	// Navigation toggle functionality
	function initializeNavigation() {
		const navToggle = document.getElementById('nav-toggle');
		const navMenu = document.getElementById('nav-menu');
		const navOverlay = document.getElementById('nav-overlay');

		if (!navToggle || !navMenu || !navOverlay) {
			console.warn('Navigation elements not found');
			return;
		}

		function openNav() {
			navMenu.classList.remove('-translate-x-full');
			navOverlay.classList.remove('opacity-0', 'pointer-events-none');
			document.body.style.overflow = 'hidden';
		}

		function closeNav() {
			navMenu.classList.add('-translate-x-full');
			navOverlay.classList.add('opacity-0', 'pointer-events-none');
			document.body.style.overflow = '';
		}

		navToggle.addEventListener('click', openNav);
		navOverlay.addEventListener('click', closeNav);

		// Close on escape key
		document.addEventListener('keydown', (e) => {
			if (
				e.key === 'Escape' &&
				!navMenu.classList.contains('-translate-x-full')
			) {
				closeNav();
			}
		});
	}

	// Initialize when DOM is ready
	if (document.readyState === 'loading') {
		document.addEventListener('DOMContentLoaded', initializeNavigation);
	} else {
		initializeNavigation();
	}

	// Re-initialize on Astro page navigation
	document.addEventListener('astro:page-load', initializeNavigation);
</script>
