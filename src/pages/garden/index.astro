---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Search from '../../components/Search.astro';
import PostCard from '../../components/PostCard.astro';
import { getCollection } from 'astro:content';

const posts = await getCollection('garden');
console.log("üöÄ ~ posts:", posts.length);
const sortedPosts = posts.sort((a, b) => 
  b.data.publishDate.getTime() - a.data.publishDate.getTime()
);

// Get unique categories and tags
const categories = [...new Set(posts.map(post => post.data.category))];
const tags = [...new Set(posts.flatMap(post => post.data.tags || []))];

// Pagination setup
const POSTS_PER_PAGE = 10;
const url = new URL(Astro.request.url);
const currentPage = parseInt(url.searchParams.get('page') || '1');
const totalPages = Math.ceil(sortedPosts.length / POSTS_PER_PAGE);

// Calculate start and end indices for current page
const startIndex = (currentPage - 1) * POSTS_PER_PAGE;
const endIndex = startIndex + POSTS_PER_PAGE;
const paginatedPosts = sortedPosts.slice(startIndex, endIndex);

// Generate pagination URLs
const generatePageUrl = (page: number) => {
  const newUrl = new URL(Astro.request.url);
  if (page === 1) {
    newUrl.searchParams.delete('page');
  } else {
    newUrl.searchParams.set('page', page.toString());
  }
  return newUrl.pathname + newUrl.search;
};
---

<Layout title="Digital Garden | Miguel Marin">
  <div class="container mx-auto max-w-4xl px-6 py-20">
    <header class="mb-12">
      <h1 class="text-4xl font-bold text-garden-primary dark:text-garden-dark-primary mb-4 font-ui">Digital Garden</h1>
      <p class="text-xl text-garden-secondary dark:text-garden-dark-secondary font-body">A space where ideas grow and thoughts interconnect.</p>
    </header>

    <div class="grid md:grid-cols-[250px,1fr] gap-8">
      <aside class="space-y-8">
        <div>
          <h2 class="text-lg font-semibold text-garden-primary dark:text-garden-dark-primary mb-4 font-ui">Categories</h2>
          <ul class="space-y-2">
            {categories.map(category => (
              <li>
                <a 
                  href={`/category/${category}`}
                  class="text-garden-secondary dark:text-garden-dark-secondary hover:text-garden-accent dark:hover:text-garden-dark-accent transition-colors font-body"
                >
                  {category}
                </a>
              </li>
            ))}
          </ul>
        </div>

        <div>
          <h2 class="text-lg font-semibold text-garden-primary dark:text-garden-dark-primary mb-4 font-ui">Tags</h2>
          <div class="flex flex-wrap gap-2">
            {tags.map(tag => (
              <a 
                href={`/tag/${tag}`}
                class="px-2 py-1 text-sm bg-garden-surface dark:bg-garden-dark-surface text-garden-secondary dark:text-garden-dark-secondary rounded-md hover:bg-garden-accent hover:text-white dark:hover:bg-garden-dark-accent transition-colors font-ui"
              >
                {tag}
              </a>
            ))}
          </div>
        </div>
      </aside>

      <div>
        <div class="mb-8">
          <Search />
        </div>
        
        <!-- Posts count and pagination info -->
        <div class="mb-6 text-sm text-garden-secondary dark:text-garden-dark-secondary font-ui">
          Showing {startIndex + 1}-{Math.min(endIndex, sortedPosts.length)} of {sortedPosts.length} posts
          {totalPages > 1 && (
            <span class="ml-2">‚Ä¢ Page {currentPage} of {totalPages}</span>
          )}
        </div>

        <div class="space-y-8">
          {paginatedPosts.map(post => (
            <PostCard
              title={post.data.title}
              description={post.data.description}
              publishDate={post.data.publishDate}
              updateDate={post.data.updateDate}
              url={`/garden/${post.slug}`}
              tags={post.data.tags}
            />
          ))}
        </div>

        <!-- Pagination Navigation -->
        {totalPages > 1 && (
          <nav class="mt-12 flex justify-center items-center space-x-4" aria-label="Pagination">
            <!-- Previous Button -->
            {currentPage > 1 ? (
              <a 
                href={generatePageUrl(currentPage - 1)}
                class="px-4 py-2 bg-garden-surface dark:bg-garden-dark-surface text-garden-primary dark:text-garden-dark-primary border border-gray-200 dark:border-gray-700 rounded-md hover:bg-garden-accent hover:text-white dark:hover:bg-garden-dark-accent transition-colors font-ui"
              >
                ‚Üê Previous
              </a>
            ) : (
              <span class="px-4 py-2 text-garden-muted dark:text-garden-dark-muted cursor-not-allowed font-ui">
                ‚Üê Previous
              </span>
            )}

            <!-- Page Numbers -->
            <div class="flex space-x-2">
              {Array.from({ length: totalPages }, (_, i) => i + 1).map(page => (
                page === currentPage ? (
                  <span class="px-3 py-2 bg-garden-accent dark:bg-garden-dark-accent text-white rounded-md font-ui">
                    {page}
                  </span>
                ) : (
                  <a 
                    href={generatePageUrl(page)}
                    class="px-3 py-2 bg-garden-surface dark:bg-garden-dark-surface text-garden-primary dark:text-garden-dark-primary border border-gray-200 dark:border-gray-700 rounded-md hover:bg-garden-accent hover:text-white dark:hover:bg-garden-dark-accent transition-colors font-ui"
                  >
                    {page}
                  </a>
                )
              ))}
            </div>

            <!-- Next Button -->
            {currentPage < totalPages ? (
              <a 
                href={generatePageUrl(currentPage + 1)}
                class="px-4 py-2 bg-garden-surface dark:bg-garden-dark-surface text-garden-primary dark:text-garden-dark-primary border border-gray-200 dark:border-gray-700 rounded-md hover:bg-garden-accent hover:text-white dark:hover:bg-garden-dark-accent transition-colors font-ui"
              >
                Next ‚Üí
              </a>
            ) : (
              <span class="px-4 py-2 text-garden-muted dark:text-garden-dark-muted cursor-not-allowed font-ui">
                Next ‚Üí
              </span>
            )}
          </nav>
        )}
      </div>
    </div>
  </div>
</Layout>